"""init all models

Revision ID: 35942731785d
Revises: 
Create Date: 2025-10-03 19:44:02.031576

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '35942731785d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('details', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analytics_id'), 'analytics', ['id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('actor', sa.String(length=255), nullable=True),
    sa.Column('action', sa.String(length=128), nullable=False),
    sa.Column('target', sa.String(length=255), nullable=True),
    sa.Column('ip', sa.String(length=64), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('meta', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('communities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_communities_id'), 'communities', ['id'], unique=False)
    op.create_table('feature_toggles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('feature_name', sa.String(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feature_toggles_feature_name'), 'feature_toggles', ['feature_name'], unique=True)
    op.create_index(op.f('ix_feature_toggles_id'), 'feature_toggles', ['id'], unique=False)
    op.create_table('metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_metrics_id'), 'metrics', ['id'], unique=False)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('system_flags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_system_flags_id'), 'system_flags', ['id'], unique=False)
    op.create_index(op.f('ix_system_flags_key'), 'system_flags', ['key'], unique=True)
    op.create_table('tiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_tiers_id'), 'tiers', ['id'], unique=False)
    op.create_table('toggles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_toggles_id'), 'toggles', ['id'], unique=False)
    op.create_index(op.f('ix_toggles_name'), 'toggles', ['name'], unique=True)
    op.create_table('lounges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lounges_community_id'), 'lounges', ['community_id'], unique=False)
    op.create_index(op.f('ix_lounges_id'), 'lounges', ['id'], unique=False)
    op.create_table('premium_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('tier_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['tier_id'], ['tiers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_premium_models_id'), 'premium_models', ['id'], unique=False)
    op.create_table('avatars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_avatars_id'), 'avatars', ['id'], unique=False)
    op.create_index(op.f('ix_avatars_user_id'), 'avatars', ['user_id'], unique=False)
    op.create_table('community_members',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'community_id')
    )
    op.create_table('editor_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('media_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_editor_documents_id'), 'editor_documents', ['id'], unique=False)
    op.create_index(op.f('ix_editor_documents_owner_id'), 'editor_documents', ['owner_id'], unique=False)
    op.create_table('email_verify_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_verify_tokens_expires_at'), 'email_verify_tokens', ['expires_at'], unique=False)
    op.create_index(op.f('ix_email_verify_tokens_token'), 'email_verify_tokens', ['token'], unique=True)
    op.create_index(op.f('ix_email_verify_tokens_user_id'), 'email_verify_tokens', ['user_id'], unique=False)
    op.create_table('history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_history_id'), 'history', ['id'], unique=False)
    op.create_index(op.f('ix_history_user_id'), 'history', ['user_id'], unique=False)
    op.create_table('invites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'EXPIRED', name='invitestatus'), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invites_id'), 'invites', ['id'], unique=False)
    op.create_index(op.f('ix_invites_recipient_id'), 'invites', ['recipient_id'], unique=False)
    op.create_index(op.f('ix_invites_sender_id'), 'invites', ['sender_id'], unique=False)
    op.create_table('loras',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_loras_id'), 'loras', ['id'], unique=False)
    op.create_index(op.f('ix_loras_name'), 'loras', ['name'], unique=False)
    op.create_index(op.f('ix_loras_user_id'), 'loras', ['user_id'], unique=False)
    op.create_table('lounge_members',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('lounge_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lounge_id'], ['lounges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'lounge_id')
    )
    op.create_table('media',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_media_id'), 'media', ['id'], unique=False)
    op.create_index(op.f('ix_media_user_id'), 'media', ['user_id'], unique=False)
    op.create_table('moderation_cases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('target_type', sa.Enum('media', 'video', 'post', 'comment', 'profile', name='targettype'), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', 'escalated', name='moderationstatus'), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('detected_labels', sa.JSON(), nullable=True),
    sa.Column('is_nsfw', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.Column('assigned_to_id', sa.Integer(), nullable=True),
    sa.Column('resolution_notes', sa.String(length=2000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assigned_to_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_moderation_cases_id'), 'moderation_cases', ['id'], unique=False)
    op.create_index(op.f('ix_moderation_cases_status'), 'moderation_cases', ['status'], unique=False)
    op.create_index(op.f('ix_moderation_cases_target_id'), 'moderation_cases', ['target_id'], unique=False)
    op.create_index(op.f('ix_moderation_cases_target_type'), 'moderation_cases', ['target_type'], unique=False)
    op.create_index('ix_moderation_target', 'moderation_cases', ['target_type', 'target_id'], unique=False)
    op.create_table('motions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lounge_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['lounge_id'], ['lounges.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_motions_id'), 'motions', ['id'], unique=False)
    op.create_index(op.f('ix_motions_lounge_id'), 'motions', ['lounge_id'], unique=False)
    op.create_table('password_reset_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=64), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_password_reset_tokens_expires_at'), 'password_reset_tokens', ['expires_at'], unique=False)
    op.create_index(op.f('ix_password_reset_tokens_token'), 'password_reset_tokens', ['token'], unique=True)
    op.create_index(op.f('ix_password_reset_tokens_user_id'), 'password_reset_tokens', ['user_id'], unique=False)
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('community_id', sa.Integer(), nullable=True),
    sa.Column('lounge_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('image_path', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['communities.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['lounge_id'], ['lounges.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_id'), 'posts', ['id'], unique=False)
    op.create_index(op.f('ix_posts_user_id'), 'posts', ['user_id'], unique=False)
    op.create_table('uploads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_uploads_id'), 'uploads', ['id'], unique=False)
    op.create_index(op.f('ix_uploads_user_id'), 'uploads', ['user_id'], unique=False)
    op.create_table('user_roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'role_id', name='uq_user_role')
    )
    op.create_table('user_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('tier_id', sa.Integer(), nullable=True),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['tier_id'], ['tiers.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_settings_id'), 'user_settings', ['id'], unique=False)
    op.create_table('videos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_videos_id'), 'videos', ['id'], unique=False)
    op.create_index(op.f('ix_videos_user_id'), 'videos', ['user_id'], unique=False)
    op.create_table('whisper_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_whisper_models_id'), 'whisper_models', ['id'], unique=False)
    op.create_index(op.f('ix_whisper_models_name'), 'whisper_models', ['name'], unique=False)
    op.create_index(op.f('ix_whisper_models_user_id'), 'whisper_models', ['user_id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_id'), 'comments', ['id'], unique=False)
    op.create_index(op.f('ix_comments_post_id'), 'comments', ['post_id'], unique=False)
    op.create_index(op.f('ix_comments_user_id'), 'comments', ['user_id'], unique=False)
    op.create_table('enhancement_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('requested_by', sa.Integer(), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['editor_documents.id'], ),
    sa.ForeignKeyConstraint(['requested_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_enhancement_requests_document_id'), 'enhancement_requests', ['document_id'], unique=False)
    op.create_index(op.f('ix_enhancement_requests_id'), 'enhancement_requests', ['id'], unique=False)
    op.create_index(op.f('ix_enhancement_requests_requested_by'), 'enhancement_requests', ['requested_by'], unique=False)
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reporter_id', sa.Integer(), nullable=True),
    sa.Column('target_type', sa.Enum('media', 'video', 'post', 'comment', 'profile', name='targettype'), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Enum('nsfw', 'spam', 'abuse', 'copyright', 'other', name='reportreason'), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('open', 'merged', 'closed', name='reportstatus'), nullable=False),
    sa.Column('moderation_case_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['moderation_case_id'], ['moderation_cases.id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reports_id'), 'reports', ['id'], unique=False)
    op.create_index(op.f('ix_reports_status'), 'reports', ['status'], unique=False)
    op.create_index(op.f('ix_reports_target_id'), 'reports', ['target_id'], unique=False)
    op.create_index(op.f('ix_reports_target_type'), 'reports', ['target_type'], unique=False)
    op.create_table('enhancement_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('parent_request_id', sa.Integer(), nullable=True),
    sa.Column('version_index', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['editor_documents.id'], ),
    sa.ForeignKeyConstraint(['parent_request_id'], ['enhancement_requests.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_enhancement_versions_document_id'), 'enhancement_versions', ['document_id'], unique=False)
    op.create_index(op.f('ix_enhancement_versions_id'), 'enhancement_versions', ['id'], unique=False)
    op.create_table('reactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('LIKE', 'LOVE', 'WOW', 'SAD', 'ANGRY', name='reactiontype'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reactions_id'), 'reactions', ['id'], unique=False)
    op.create_index(op.f('ix_reactions_user_id'), 'reactions', ['user_id'], unique=False)
    op.alter_column('refresh_tokens', 'jti',
    existing_type=sa.VARCHAR(length=128),
    type_=sa.String(length=64),
    existing_nullable=False)
    op.alter_column('refresh_tokens', 'revoked',
    existing_type=sa.BOOLEAN(),
    server_default=None,
    existing_nullable=False)
    op.drop_constraint('refresh_tokens_jti_key', 'refresh_tokens', type_='unique')
    op.create_index(op.f('ix_refresh_tokens_jti'), 'refresh_tokens', ['jti'], unique=True)
    op.drop_column('refresh_tokens', 'created_at')
    op.add_column('users', sa.Column('username', sa.String(), nullable=True))

    # Backfill usernames: prefer email localpart; if empty, fallback to 'user_<id>'.
    # Ensure uniqueness by appending _2, _3, ... when duplicates occur.
    op.execute("""
    WITH base AS (
    SELECT id,
    COALESCE(NULLIF(username, ''), split_part(email, '@', 1), 'user_' || id::text) AS base
    FROM users
    ),
    ranked AS (
    SELECT id, base,
    base || CASE WHEN rn = 1 THEN '' ELSE '_' || rn::text END AS final
    FROM (
    SELECT id, base,
    ROW_NUMBER() OVER (PARTITION BY base ORDER BY id) AS rn
    FROM base
    ) t
    )
    UPDATE users u
    SET username = r.final
    FROM ranked r
    WHERE u.id = r.id;
    """)

    # Now enforce NOT NULL
    op.alter_column('users', 'username', existing_type=sa.String(), nullable=False)
    op.add_column('users', sa.Column('tier_id', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('users', sa.Column('api_key', sa.String(), nullable=True))
    op.alter_column('users', 'hashed_password',
    existing_type=sa.VARCHAR(length=255),
    nullable=False)
    op.alter_column('users', 'created_at',
    existing_type=postgresql.TIMESTAMP(),
    type_=sa.DateTime(timezone=True),
    nullable=True,
    existing_server_default=sa.text('now()'))
    op.drop_constraint('uq_users_email', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_foreign_key(None, 'users', 'tiers', ['tier_id'], ['id'])
    op.drop_column('users', 'password_hash')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'is_verified')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('uq_users_email', 'users', ['email'])
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_column('users', 'api_key')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'tier_id')
    op.drop_column('users', 'username')
    op.add_column('refresh_tokens', sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_refresh_tokens_jti'), table_name='refresh_tokens')
    op.create_unique_constraint('refresh_tokens_jti_key', 'refresh_tokens', ['jti'])
    op.alter_column('refresh_tokens', 'revoked',
               existing_type=sa.BOOLEAN(),
               server_default=sa.text('false'),
               existing_nullable=False)
    op.alter_column('refresh_tokens', 'jti',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=128),
               existing_nullable=False)
    op.drop_index(op.f('ix_reactions_user_id'), table_name='reactions')
    op.drop_index(op.f('ix_reactions_id'), table_name='reactions')
    op.drop_table('reactions')
    op.drop_index(op.f('ix_enhancement_versions_id'), table_name='enhancement_versions')
    op.drop_index(op.f('ix_enhancement_versions_document_id'), table_name='enhancement_versions')
    op.drop_table('enhancement_versions')
    op.drop_index(op.f('ix_reports_target_type'), table_name='reports')
    op.drop_index(op.f('ix_reports_target_id'), table_name='reports')
    op.drop_index(op.f('ix_reports_status'), table_name='reports')
    op.drop_index(op.f('ix_reports_id'), table_name='reports')
    op.drop_table('reports')
    op.drop_index(op.f('ix_enhancement_requests_requested_by'), table_name='enhancement_requests')
    op.drop_index(op.f('ix_enhancement_requests_id'), table_name='enhancement_requests')
    op.drop_index(op.f('ix_enhancement_requests_document_id'), table_name='enhancement_requests')
    op.drop_table('enhancement_requests')
    op.drop_index(op.f('ix_comments_user_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_post_id'), table_name='comments')
    op.drop_index(op.f('ix_comments_id'), table_name='comments')
    op.drop_table('comments')
    op.drop_index(op.f('ix_whisper_models_user_id'), table_name='whisper_models')
    op.drop_index(op.f('ix_whisper_models_name'), table_name='whisper_models')
    op.drop_index(op.f('ix_whisper_models_id'), table_name='whisper_models')
    op.drop_table('whisper_models')
    op.drop_index(op.f('ix_videos_user_id'), table_name='videos')
    op.drop_index(op.f('ix_videos_id'), table_name='videos')
    op.drop_table('videos')
    op.drop_index(op.f('ix_user_settings_id'), table_name='user_settings')
    op.drop_table('user_settings')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_uploads_user_id'), table_name='uploads')
    op.drop_index(op.f('ix_uploads_id'), table_name='uploads')
    op.drop_table('uploads')
    op.drop_index(op.f('ix_posts_user_id'), table_name='posts')
    op.drop_index(op.f('ix_posts_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_password_reset_tokens_user_id'), table_name='password_reset_tokens')
    op.drop_index(op.f('ix_password_reset_tokens_token'), table_name='password_reset_tokens')
    op.drop_index(op.f('ix_password_reset_tokens_expires_at'), table_name='password_reset_tokens')
    op.drop_table('password_reset_tokens')
    op.drop_index(op.f('ix_motions_lounge_id'), table_name='motions')
    op.drop_index(op.f('ix_motions_id'), table_name='motions')
    op.drop_table('motions')
    op.drop_index('ix_moderation_target', table_name='moderation_cases')
    op.drop_index(op.f('ix_moderation_cases_target_type'), table_name='moderation_cases')
    op.drop_index(op.f('ix_moderation_cases_target_id'), table_name='moderation_cases')
    op.drop_index(op.f('ix_moderation_cases_status'), table_name='moderation_cases')
    op.drop_index(op.f('ix_moderation_cases_id'), table_name='moderation_cases')
    op.drop_table('moderation_cases')
    op.drop_index(op.f('ix_media_user_id'), table_name='media')
    op.drop_index(op.f('ix_media_id'), table_name='media')
    op.drop_table('media')
    op.drop_table('lounge_members')
    op.drop_index(op.f('ix_loras_user_id'), table_name='loras')
    op.drop_index(op.f('ix_loras_name'), table_name='loras')
    op.drop_index(op.f('ix_loras_id'), table_name='loras')
    op.drop_table('loras')
    op.drop_index(op.f('ix_invites_sender_id'), table_name='invites')
    op.drop_index(op.f('ix_invites_recipient_id'), table_name='invites')
    op.drop_index(op.f('ix_invites_id'), table_name='invites')
    op.drop_table('invites')
    op.drop_index(op.f('ix_history_user_id'), table_name='history')
    op.drop_index(op.f('ix_history_id'), table_name='history')
    op.drop_table('history')
    op.drop_index(op.f('ix_email_verify_tokens_user_id'), table_name='email_verify_tokens')
    op.drop_index(op.f('ix_email_verify_tokens_token'), table_name='email_verify_tokens')
    op.drop_index(op.f('ix_email_verify_tokens_expires_at'), table_name='email_verify_tokens')
    op.drop_table('email_verify_tokens')
    op.drop_index(op.f('ix_editor_documents_owner_id'), table_name='editor_documents')
    op.drop_index(op.f('ix_editor_documents_id'), table_name='editor_documents')
    op.drop_table('editor_documents')
    op.drop_table('community_members')
    op.drop_index(op.f('ix_avatars_user_id'), table_name='avatars')
    op.drop_index(op.f('ix_avatars_id'), table_name='avatars')
    op.drop_table('avatars')
    op.drop_index(op.f('ix_premium_models_id'), table_name='premium_models')
    op.drop_table('premium_models')
    op.drop_index(op.f('ix_lounges_id'), table_name='lounges')
    op.drop_index(op.f('ix_lounges_community_id'), table_name='lounges')
    op.drop_table('lounges')
    op.drop_index(op.f('ix_toggles_name'), table_name='toggles')
    op.drop_index(op.f('ix_toggles_id'), table_name='toggles')
    op.drop_table('toggles')
    op.drop_index(op.f('ix_tiers_id'), table_name='tiers')
    op.drop_table('tiers')
    op.drop_index(op.f('ix_system_flags_key'), table_name='system_flags')
    op.drop_index(op.f('ix_system_flags_id'), table_name='system_flags')
    op.drop_table('system_flags')
    op.drop_table('roles')
    op.drop_index(op.f('ix_metrics_id'), table_name='metrics')
    op.drop_table('metrics')
    op.drop_index(op.f('ix_feature_toggles_id'), table_name='feature_toggles')
    op.drop_index(op.f('ix_feature_toggles_feature_name'), table_name='feature_toggles')
    op.drop_table('feature_toggles')
    op.drop_index(op.f('ix_communities_id'), table_name='communities')
    op.drop_table('communities')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_analytics_id'), table_name='analytics')
    op.drop_table('analytics')
    # ### end Alembic commands ###







